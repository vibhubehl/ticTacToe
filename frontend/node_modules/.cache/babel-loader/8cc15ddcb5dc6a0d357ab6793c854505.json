{"ast":null,"code":"var _jsxFileName = \"/Users/divyachawla/Desktop/Project/TicTacToe/ticTacToe/src/components/Panel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport zero from \"../assets/img/zero.png\";\nimport '../assets/css/Panel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let PanelType;\n\n(function (PanelType) {\n  PanelType[\"empty\"] = \"empty\";\n  PanelType[\"zero\"] = \"zero\";\n  PanelType[\"cross\"] = \"cross\";\n})(PanelType || (PanelType = {}));\n\nexport function Panel(props) {\n  _s();\n\n  const [type, setType] = useState(PanelType[\"empty\"]);\n\n  function toggleState() {\n    if (PanelType[\"empty\"] === type) {\n      setType(props.assignedType);\n    } else {\n      setType(PanelType.empty);\n    }\n\n    console.log(\"hello1\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: toggleState,\n    className: \"Panel-image\",\n    children: type === PanelType.zero && /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        display: \"block\"\n      },\n      src: zero,\n      alt: \"zero\",\n      onClick: toggleState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Panel, \"/kS5LyaBBQf/H13RKiuVHi1Yrgc=\");\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/Users/divyachawla/Desktop/Project/TicTacToe/ticTacToe/src/components/Panel.tsx"],"names":["React","useState","zero","PanelType","Panel","props","type","setType","toggleState","assignedType","empty","console","log","display"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAO,yBAAP;;AAEA,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAWZ,OAAO,SAASC,KAAT,CAAgBC,KAAhB,EAAmC;AAAA;;AAExC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACE,SAAS,CAAC,OAAD,CAAV,CAAhC;;AAEA,WAASK,WAAT,GAA8B;AAC5B,QAAKL,SAAS,CAAC,OAAD,CAAT,KAAuBG,IAA5B,EAAiC;AAC/BC,MAAAA,OAAO,CAACF,KAAK,CAACI,YAAP,CAAP;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,CAACJ,SAAS,CAACO,KAAX,CAAP;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AACD,sBACE;AAAK,IAAA,OAAO,EAAEJ,WAAd;AAA2B,IAAA,SAAS,EAAC,aAArC;AAAA,cACMF,IAAI,KAAKH,SAAS,CAACD,IAAnB,iBACA;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,OAAO,EAAC;AAAT,OAAZ;AAA+B,MAAA,GAAG,EAAEX,IAApC;AAA0C,MAAA,GAAG,EAAC,MAA9C;AAAqD,MAAA,OAAO,EAAEM;AAA9D;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnBeJ,K;;KAAAA,K;AAqBhB,eAAeA,KAAf","sourcesContent":["\n   \nimport React, { useState } from 'react';\nimport { useStore } from 'react-redux';\nimport zero from \"../assets/img/zero.png\";\nimport cross from \"../assets/img/cross2.png\";\nimport '../assets/css/Panel.css';\n\nexport enum PanelType {\n  empty = \"empty\",\n  zero = \"zero\",\n  cross = \"cross\",\n}\n\ninterface PanelProps{\n  id: number\n  assignedType: PanelType;\n}\n\nexport function Panel (props: PanelProps) {\n \n  const [type, setType] = useState(PanelType[\"empty\"]);  \n\n  function toggleState (): void {\n    if ( PanelType[\"empty\"] === type){\n      setType(props.assignedType);\n    } else {\n      setType(PanelType.empty);\n    }\n    console.log(\"hello1\");\n  }\n  return (\n    <div onClick={toggleState} className=\"Panel-image\">\n        { type === PanelType.zero &&\n          <img style={{display:\"block\"}} src={zero} alt=\"zero\" onClick={toggleState}/>\n        }\n    </div>\n  );\n}\n\nexport default Panel;"]},"metadata":{},"sourceType":"module"}